"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ecosystemWallet = ecosystemWallet;
const ecosystem_core_js_1 = require("../core/wallet/ecosystem-core.js");
/**
 * Creates an ecosystem wallet.
 * @param createOptions - configuration options
 * @returns The created ecosystem wallet.
 * @example
 * ```ts
 * import { ecosystemWallet } from "thirdweb/wallets";
 *
 * const wallet = ecosystemWallet("ecosystem.hooli");
 *
 * const account = await wallet.connect({
 *   client,
 *   chain,
 *   strategy: "google",
 * });
 * ```
 *
 * Connect to a restricted ecosystem wallet with your designated partner ID
 * @note The parnter ID will be provided to you by the ecosystem with which you're integrating.
 * ```ts
 * import { ecosystemWallet } from "thirdweb/wallets";
 * const wallet = ecosystemWallet("ecosystem.hooli", {
 *  partnerId: "..."
 * });
 * ```
 * @wallet
 */
function ecosystemWallet(...args) {
    const [ecosystemId, createOptions] = args;
    return (0, ecosystem_core_js_1.createEcosystemWallet)({
        id: ecosystemId,
        createOptions,
        connectorFactory: async (client) => {
            const { InAppWebConnector } = await Promise.resolve().then(() => require("./lib/web-connector.js"));
            return new InAppWebConnector({
                client,
                ecosystem: {
                    id: ecosystemId,
                    partnerId: createOptions?.partnerId,
                },
            });
        },
    });
}
//# sourceMappingURL=ecosystem.js.map