"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useConnectedWalletDetails = useConnectedWalletDetails;
exports.useWalletInfo = useWalletInfo;
exports.useWalletImage = useWalletImage;
const react_query_1 = require("@tanstack/react-query");
const ethereum_js_1 = require("../../../chains/chain-definitions/ethereum.js");
const resolve_avatar_js_1 = require("../../../extensions/ens/resolve-avatar.js");
const resolve_name_js_1 = require("../../../extensions/ens/resolve-name.js");
const getWalletInfo_js_1 = require("../../../wallets/__generated__/getWalletInfo.js");
const useWalletBalance_js_1 = require("../hooks/others/useWalletBalance.js");
const addresses_js_1 = require("./addresses.js");
/**
 * @internal
 */
function useConnectedWalletDetails(client, walletChain, activeAccount, displayBalanceToken) {
    const tokenAddress = walletChain && displayBalanceToken
        ? displayBalanceToken[Number(walletChain.id)]
        : undefined;
    const ensNameQuery = (0, react_query_1.useQuery)({
        queryKey: ["ens-name", activeAccount?.address],
        enabled: !!activeAccount?.address,
        queryFn: () => (0, resolve_name_js_1.resolveName)({
            client,
            address: activeAccount?.address || "",
            resolverChain: ethereum_js_1.ethereum,
        }),
    });
    const ensAvatarQuery = (0, react_query_1.useQuery)({
        queryKey: ["ens-avatar", ensNameQuery.data],
        enabled: !!ensNameQuery.data,
        queryFn: async () => (0, resolve_avatar_js_1.resolveAvatar)({
            client,
            name: ensNameQuery.data || "",
        }),
    });
    const shortAddress = activeAccount?.address
        ? (0, addresses_js_1.shortenString)(activeAccount.address, false)
        : "";
    const balanceQuery = (0, useWalletBalance_js_1.useWalletBalance)({
        chain: walletChain ? walletChain : undefined,
        tokenAddress,
        address: activeAccount?.address,
        client,
    });
    const addressOrENS = ensNameQuery.data || shortAddress;
    return {
        ensNameQuery,
        ensAvatarQuery,
        addressOrENS,
        shortAddress,
        balanceQuery,
    };
}
/**
 * Returns the wallet info for the provided wallet id.
 * @wallet
 */
function useWalletInfo(id) {
    return (0, react_query_1.useQuery)({
        queryKey: ["wallet-info", id],
        queryFn: () => {
            return (0, getWalletInfo_js_1.getWalletInfo)(id, false);
        },
        retry: false,
        refetchOnWindowFocus: false,
        refetchOnMount: false,
    });
}
/**
 * Returns the wallet image for the provided wallet id.
 * @wallet
 */
function useWalletImage(id) {
    return (0, react_query_1.useQuery)({
        queryKey: ["wallet-image", id],
        queryFn: () => {
            return (0, getWalletInfo_js_1.getWalletInfo)(id, true);
        },
        retry: false,
        refetchOnWindowFocus: false,
        refetchOnMount: false,
    });
}
//# sourceMappingURL=wallet.js.map