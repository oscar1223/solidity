import type { EcosystemWalletId } from "../../../../wallet-types.js";
/**
 * @internal
 */
export declare class LocalStorage {
    protected isSupported: boolean;
    protected key: string;
    /**
     * @internal
     */
    constructor({ clientId, ecosystemId, }: {
        clientId: string;
        ecosystemId?: EcosystemWalletId;
    });
    protected getItem(key: string): Promise<string | null>;
    protected setItem(key: string, value: string): Promise<void>;
    protected removeItem(key: string): Promise<boolean>;
    /**
     * @internal
     */
    getWalletConnectSessions(): Promise<string | null>;
    /**
     * @internal
     */
    saveWalletConnectSessions(stringifiedSessions: string): Promise<void>;
    /**
     * @internal
     */
    savePasskeyCredentialId(id: string): Promise<void>;
    /**
     * @internal
     */
    getPasskeyCredentialId(): Promise<string | null>;
    /**
     * @internal
     */
    saveAuthCookie(cookie: string): Promise<void>;
    /**
     * @internal
     */
    getAuthCookie(): Promise<string | null>;
    /**
     * @internal
     */
    removeAuthCookie(): Promise<boolean>;
    /**
     * @internal
     */
    saveDeviceShare(share: string, userId: string): Promise<void>;
    /**
     * @internal
     */
    getDeviceShare(): Promise<string | null>;
    /**
     * @internal
     */
    removeDeviceShare(): Promise<boolean>;
    /**
     * @internal
     */
    getWalletUserId(): Promise<string | null>;
    /**
     * @internal
     */
    saveWalletUserId(userId: string): Promise<void>;
    /**
     * @internal
     */
    removeWalletUserId(): Promise<boolean>;
}
//# sourceMappingURL=LocalStorage.d.ts.map