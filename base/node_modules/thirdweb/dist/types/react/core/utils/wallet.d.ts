import type { Chain } from "../../../chains/types.js";
import type { ThirdwebClient } from "../../../client/client.js";
import type { Account } from "../../../wallets/interfaces/wallet.js";
import type { WalletInfo } from "../../../wallets/wallet-info.js";
import type { WalletId } from "../../../wallets/wallet-types.js";
/**
 * @internal
 */
export declare function useConnectedWalletDetails(client: ThirdwebClient, walletChain: Chain | undefined, activeAccount: Account | undefined, displayBalanceToken?: Record<number, string>): {
    ensNameQuery: import("@tanstack/react-query").UseQueryResult<string | null, Error>;
    ensAvatarQuery: import("@tanstack/react-query").UseQueryResult<string | null, Error>;
    addressOrENS: string;
    shortAddress: string;
    balanceQuery: import("@tanstack/react-query").UseQueryResult<import("../../../wallets/utils/getWalletBalance.js").GetWalletBalanceResult, Error>;
};
/**
 * Returns the wallet info for the provided wallet id.
 * @wallet
 */
export declare function useWalletInfo(id: WalletId): import("@tanstack/react-query").UseQueryResult<WalletInfo, Error>;
/**
 * Returns the wallet image for the provided wallet id.
 * @wallet
 */
export declare function useWalletImage(id: WalletId): import("@tanstack/react-query").UseQueryResult<string, Error>;
//# sourceMappingURL=wallet.d.ts.map