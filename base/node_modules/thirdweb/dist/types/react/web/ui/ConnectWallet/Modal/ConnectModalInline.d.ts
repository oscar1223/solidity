import type { Chain } from "../../../../../chains/types.js";
import type { ThirdwebClient } from "../../../../../client/client.js";
import type { Wallet } from "../../../../../wallets/interfaces/wallet.js";
import type { SmartWalletOptions } from "../../../../../wallets/smart/types.js";
import { type Theme } from "../../../../core/design-system/index.js";
import type { SiweAuthOptions } from "../../../../core/hooks/auth/useSiweAuth.js";
import type { LocaleId } from "../../types.js";
import type { ConnectLocale } from "../locale/types.js";
import type { WelcomeScreen } from "../screens/types.js";
/**
 * @internal
 */
export type ConnectModalInlineProps = {
    chainId?: bigint;
    className?: string;
    theme?: "dark" | "light" | Theme;
    modalTitle?: string;
    modalTitleIconUrl?: string;
    style?: React.CSSProperties;
    modalSize?: "compact" | "wide";
    termsOfServiceUrl?: string;
    privacyPolicyUrl?: string;
    showThirdwebBranding?: boolean;
    accountAbstraction: SmartWalletOptions | undefined;
    auth: SiweAuthOptions | undefined;
    chain: Chain | undefined;
    chains: Chain[] | undefined;
    client: ThirdwebClient;
    connectLocale: ConnectLocale;
    size: "compact" | "wide";
    welcomeScreen: WelcomeScreen;
    meta: {
        title?: string;
        titleIconUrl?: string;
        showThirdwebBranding?: boolean;
        termsOfServiceUrl?: string;
        privacyPolicyUrl?: string;
    };
    isEmbed: boolean;
    localeId: LocaleId;
    onConnect: ((wallet: Wallet) => void) | undefined;
    recommendedWallets: Wallet[] | undefined;
    showAllWallets: boolean | undefined;
    wallets: Wallet[];
    walletConnect: {
        projectId?: string;
    } | undefined;
};
/**
 * @internal
 */
export declare const ConnectModalInline: (props: ConnectModalInlineProps) => import("react/jsx-runtime.js").JSX.Element;
//# sourceMappingURL=ConnectModalInline.d.ts.map